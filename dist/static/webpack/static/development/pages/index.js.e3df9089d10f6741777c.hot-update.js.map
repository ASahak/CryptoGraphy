{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.e3df9089d10f6741777c.hot-update.js","sources":["webpack:///./components/elements/PrivateMessageContent.jsx"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from \"react-redux\";\r\nimport UI_ELEMENTS from \"components/shared/UI\";\r\nimport * as moment from 'moment';\r\nimport Icon from 'components/Icons/icon';\r\nimport debounce from \"lodash.debounce\";\r\nimport {\r\n    __LOAD_MORE_MESSAGES,\r\n} from 'store/actions';\r\nimport { Bus } from 'components/shared/helpers/Bus';\r\nimport {\r\n    _EVERY_PAGE_LIMIT_MESSAGES\r\n} from 'components/shared/helpers/constants';\r\nimport { __getUserMessages } from 'store/reselect';\r\nimport {\r\n    __detectCryptIcon\r\n} from 'components/shared/helpers/global-functions';\r\nimport {\r\n    __EDIT_MESSAGE,\r\n    __REMOVE_MESSAGE,\r\n} from \"store/saga\";\r\n\r\nclass PrivateMessageContent extends React.PureComponent{\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            leftColor: this.props.activeUser && this.props.activeUser?.color || '#0C4651',\r\n            rightColor: this.props.activeUser && this.props.loggedUser?.color || '#1BBC9B',\r\n            scrollLoadingAllow: true,\r\n            messagesSelector: [],\r\n            encryptIcon: true,\r\n            scrollPosition: null,\r\n            previousScrollHeight: 0,\r\n            previousScrollTop: 0,\r\n            loadingMessages: false,\r\n            isEditing: false,\r\n            isRemoving: false,\r\n            editingMsgIndex: null,\r\n        };\r\n        this._messagesEnd           = null;\r\n        this._handleDomClick        = null;\r\n        this._handleClickRemove     = null;\r\n        this.__scrollToBottom       = this.__scrollToBottom.bind(this);\r\n        this.__handleScrollTop      = this.__handleScrollTop.bind(this);\r\n        this.__showEncryptPopUp     = this.__showEncryptPopUp.bind(this);\r\n        this.__doEncryptType        = this.__doEncryptType.bind(this);\r\n        this.__hidePopUpEncrypt     = this.__hidePopUpEncrypt.bind(this);\r\n        this.__editMessage          = this.__editMessage.bind(this);\r\n        this.__removeMessageConfirm = this.__removeMessageConfirm.bind(this);\r\n        this.__removeMessage        = this.__removeMessage.bind(this);\r\n        this.__clickRemovePopUp = this.__clickRemovePopUp.bind(this);\r\n        this._scrollContent     = React.createRef();\r\n        Bus.subscribe('cancelEditing', () => {\r\n            this.setState({\r\n                isEditing: false\r\n            })\r\n        });\r\n        Bus.subscribe('endEditing', () => {\r\n            this.setState({\r\n                isEditing: false,\r\n                isRemoving: false,\r\n                editingMsgIndex: null,\r\n            })\r\n        });\r\n    }\r\n    __scrollToBottom (behavior) {\r\n        setTimeout(() => {\r\n            this._messagesEnd?.scrollIntoView({ behavior: (behavior ? 'smooth' : 'auto')});\r\n        }, 0)\r\n    }\r\n\r\n    __handleScrollTop (e) {\r\n\r\n        if (this.state.scrollLoadingAllow && e.target.scrollTop < 50) {\r\n            this.setState({\r\n                previousScrollTop: this._scrollContent?.scrollTop,\r\n                previousScrollHeight: this._scrollContent?.scrollHeight,\r\n                scrollLoadingAllow: false,\r\n                loadingMessages: true,\r\n            }, () => {\r\n                setTimeout(() => {\r\n                    this.props.__LOAD_MORE_MESSAGES(1);\r\n                }, 1000);\r\n            })\r\n        } else {\r\n            this.setState({\r\n                scrollLoadingAllow: true\r\n            })\r\n        }\r\n    }\r\n\r\n    __showEncryptPopUp (evt, index, isKey) {\r\n        if (evt.target.closest('.remove-confirm-container')) return;\r\n\r\n        const _currentSrc = evt.target.closest('.separate-p');\r\n        if (document.body.querySelector('.opened-encryptPopUp') &&\r\n            document.body.querySelector('.opened-encryptPopUp') !== _currentSrc\r\n        ) {\r\n            document.body.querySelector('.opened-encryptPopUp').setAttribute('data-hint-encrypt', false);\r\n            document.body.querySelector('.opened-encryptPopUp').classList.remove('opened-encryptPopUp')\r\n        }\r\n        if (isKey) return;\r\n        if (_currentSrc) {\r\n            const dataIcon = _currentSrc.getAttribute('data-hint-encrypt');\r\n            this.state.messagesSelector = [...this.state.messagesSelector];\r\n            this.state.messagesSelector[index].isEncrypt = false;\r\n            this.setState({\r\n                encryptIcon: JSON.parse(dataIcon),\r\n                messagesSelector: this.state.messagesSelector\r\n            }, () => this.forceUpdate());\r\n            _currentSrc.classList.toggle('opened-encryptPopUp');\r\n        }\r\n        setTimeout(() => {\r\n            addEventListener('click', this._handleDomClick = this.__hidePopUpEncrypt.bind(this, index))\r\n        }, 0)\r\n    }\r\n\r\n    __hidePopUpEncrypt (index, e) {\r\n        this.state.messagesSelector = [...this.state.messagesSelector];\r\n        delete this.state.messagesSelector[index].isEncrypt;\r\n        this.setState({\r\n            messagesSelector: this.state.messagesSelector\r\n        }, () => this.forceUpdate());\r\n\r\n        removeEventListener('click', this._handleDomClick);\r\n        if (!e.target.closest('div[data-hint-encrypt]') && document.body.querySelector('.opened-encryptPopUp')) {\r\n            document.body.querySelector('.opened-encryptPopUp').setAttribute('data-hint-encrypt', false);\r\n            document.body.querySelector('.opened-encryptPopUp').classList.remove('opened-encryptPopUp')\r\n        }\r\n    }\r\n\r\n    __doEncryptType (e, index) {\r\n        const _currentSrc = e.target.closest('.separate-p');\r\n        e.stopPropagation();\r\n\r\n        this.setState({\r\n            encryptIcon: !this.state.encryptIcon\r\n        }, () => {\r\n            _currentSrc.setAttribute('data-hint-encrypt', this.state.encryptIcon);\r\n            const newEncryption = [...this.state.messagesSelector];\r\n            newEncryption[index].isEncrypt = this.state.encryptIcon;\r\n            this.setState({\r\n                messagesSelector: newEncryption\r\n            })\r\n        })\r\n    }\r\n\r\n    __editMessage (evt, msg, time) {\r\n        const index = this.props.messages.findIndex(msg => msg.time === time);\r\n        __EDIT_MESSAGE(null, index, {idUser: this.props.activeUser?.id, myId: this.props.loggedUser?.id}).next();\r\n        evt.stopPropagation();\r\n        this.setState({\r\n            isEditing: true,\r\n            editingMsgIndex: index\r\n        }, () => {\r\n            Bus.dispatch('editMessage', {msg, index});\r\n        })\r\n    }\r\n\r\n     __removeMessageConfirm (evt) {\r\n        evt.stopPropagation();\r\n        const _currentSrc      = evt.target.closest('.separate-p');\r\n        const alreadyDeclared  = evt.target.closest('.messages-content')?.querySelector('.opened-pop-confirm-remove');\r\n        if (alreadyDeclared) {\r\n            alreadyDeclared.classList.remove('opened-pop-confirm-remove');\r\n        }\r\n        _currentSrc.classList.add('opened-pop-confirm-remove');\r\n        setTimeout(() => {\r\n            addEventListener('click', this._handleClickRemove = this.__clickRemovePopUp.bind(this))\r\n        }, 0);\r\n    }\r\n\r\n    __removeMessage (time) {\r\n        __REMOVE_MESSAGE(time, {idUser: this.props.activeUser?.id, myId: this.props.loggedUser?.id}).next();\r\n    }\r\n\r\n    __clickRemovePopUp (evt) {\r\n        const alreadyDeclared  = evt.target.closest('.messages-content')?.querySelector('.opened-pop-confirm-remove');\r\n        if (alreadyDeclared && !evt.target.closest('.remove-confirm-container') || evt.target.closest('.trigger-close-dialog')) {\r\n            alreadyDeclared.classList.remove('opened-pop-confirm-remove');\r\n            removeEventListener('click', this._handleClickRemove);\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // if (prevProps.activeUser.isTyping !== this.props.activeUser.isTyping) { todo\r\n        //     this.props.activeUser.isTyping && this.__scrollToBottom('behavior');\r\n        // }\r\n\r\n        // Detect if there are removed message\r\n        if (this.props.activeUser?.removedMessageIndex >= 0 &&\r\n            (prevProps.messages[this.props.activeUser.removedMessageIndex]?.removed !== this.props.messages[this.props.activeUser.removedMessageIndex]?.removed ||\r\n            !(() => {\r\n                const currentIndex = this.state.messagesSelector.length - (this.props.messages.length - this.props.activeUser.removedMessageIndex);\r\n                if (currentIndex < 0) return false;\r\n                return this.state.messagesSelector[currentIndex]?.removed\r\n            })())\r\n        ) {\r\n            const currentIndex = this.state.messagesSelector.length - (this.props.messages.length - this.props.activeUser.removedMessageIndex);\r\n            if (currentIndex >= 0) {\r\n                const newEncryption = [...this.state.messagesSelector];\r\n                if (newEncryption[currentIndex]) {\r\n                    newEncryption[currentIndex].removed = true;\r\n                    this.setState({\r\n                        messagesSelector: newEncryption\r\n                    })\r\n                }\r\n            }\r\n        }\r\n\r\n        // when editing have been finished\r\n        if (this.props.activeUser?.editedMsgIndex >= 0 &&\r\n            (this.props.messages[this.props.activeUser?.editedMsgIndex].message !== prevProps.messages[this.props.activeUser?.editedMsgIndex].message ||\r\n            (() => {\r\n                const currentIndex = this.state.messagesSelector.length - (this.props.messages.length - this.props.activeUser?.editedMsgIndex);\r\n                if (currentIndex < 0) return false;\r\n                return this.state.messagesSelector[currentIndex].message !== this.props.messages[this.props.activeUser?.editedMsgIndex].message;\r\n            })())\r\n        ) {\r\n            const currentIndex = this.state.messagesSelector.length - (this.props.messages.length - this.props.activeUser?.editedMsgIndex);\r\n            if (currentIndex >= 0) {\r\n                const editedArray = [...this.state.messagesSelector];\r\n                editedArray[currentIndex] = this.props.messages[this.props.activeUser?.editedMsgIndex];\r\n                this.setState({\r\n                    isEditing: false,\r\n                    isRemoving: false,\r\n                    editingMsgIndex: null,\r\n                    messagesSelector: editedArray\r\n                });\r\n            }\r\n        }\r\n        // Sending notification when there was not any messages\r\n        if (this.props.messages.length === 1 && this.props.messages[0].message === '' || prevProps.messages.length === 1 && prevProps.messages[0].message === '') {\r\n            this.props.messagesHaveBeenDeleted();\r\n        }\r\n        // Update message list\r\n        if ((prevProps.messagesPage !== this.props.messagesPage || prevProps.messages.length !== this.props.messages.length)) {\r\n            if ((this.props.messagesPage - 1) * _EVERY_PAGE_LIMIT_MESSAGES <= this.props.messages.length ) {\r\n                this.setState({\r\n                    scrollLoadingAllow: true,\r\n                    loadingMessages: false,\r\n                    messagesSelector: __getUserMessages({data: this.props.messages, page: this.props.messagesPage})\r\n                }, () => {\r\n                    if (prevProps.messages.length !== this.props.messages.length) {\r\n                        this.__scrollToBottom('behavior');\r\n                    } else {\r\n                        this._scrollContent.scrollTo(0, (this._scrollContent.scrollHeight -\r\n                            this.state.previousScrollHeight + this.state.previousScrollTop - 45));\r\n                    }\r\n                });\r\n            } else {\r\n                this.props.__LOAD_MORE_MESSAGES(-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            messagesSelector: __getUserMessages({data: this.props.messages, page: this.props.messagesPage})\r\n        }, () => {\r\n            this._scrollContent.onscroll = debounce((e) => {\r\n                if (this.props.messages.length > _EVERY_PAGE_LIMIT_MESSAGES) {\r\n                    this.__handleScrollTop(e)\r\n                }\r\n            }, 100);\r\n            this.__scrollToBottom();\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        removeEventListener('click', this._handleClickRemove);\r\n        removeEventListener('click', this._handleDomClick);\r\n        Bus.unsubscribe('cancelEditing');\r\n        Bus.unsubscribe('endEditing');\r\n    }\r\n\r\n    get FN () {\r\n        return this.props.activeUser ? this.props.activeUser.fullName.split(' ')[0].slice(0, 1).toUpperCase() : '';\r\n    }\r\n    get LN () {\r\n        return this.props.activeUser ? this.props.activeUser.fullName.split(' ')[1]?.slice(0, 1) || ''.toUpperCase() : '';\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <div\r\n                    className={`messages-content ${this.state.loadingMessages ? 'scroll-disable' : ''}`}\r\n                    ref={(el) => this._scrollContent = el}>\r\n                    {this.state.loadingMessages && <div className=\"sbl-circ\"></div>}\r\n                    {this.state.messagesSelector.map((message, index) => {\r\n                        const _isOwner = message.owner === 'Me';\r\n                        const _dataMSG = _isOwner ? this.props.loggedUser : this.props.activeUser;\r\n                        if (!_dataMSG) return '';\r\n                        return (\r\n                            <div key={message.time + index} className={_isOwner ? 'content-right_owner' : 'content-left_owner'}>\r\n                                <UI_ELEMENTS.UserImage\r\n                                    firstName={_dataMSG.fullName.split(' ')[0]}\r\n                                    lastName={_dataMSG.fullName.split(' ')[1] || ''}\r\n                                    fill={_dataMSG.color}\r\n                                />\r\n                                {message.removed ? <div className=\"removed-message\">Removed message</div> :\r\n                                <div className={`message-time ${__detectCryptIcon(message) ? 'crypt-message' : ''}`}\r\n                                     data-message-type={message.encryptType}\r\n                                     data-message-key={message.key}>\r\n                                    <div\r\n                                        className=\"separate-p\"\r\n                                        onClick={(e) => this.__showEncryptPopUp(e, index, __detectCryptIcon(message))}\r\n                                        data-hint-encrypt={false}>\r\n\r\n                                        {(_isOwner && !__detectCryptIcon(message) && (!this.state.isEditing && !this.state.isRemoving)) &&\r\n                                        <span className=\"edit-remove\">\r\n                                            <i className=\"lnr lnr-pencil\" onClick={(e) => this.__editMessage(e, message, message.time)}></i>\r\n                                            <i className=\"lnr lnr-cross\" onClick={(e) => this.__removeMessageConfirm(e)}></i>\r\n                                            <div className=\"remove-confirm-container\">\r\n                                                Are you sure?\r\n                                                <p>\r\n                                                    <a className=\"trigger-close-dialog\">No</a>\r\n                                                    <a onClick={() => this.__removeMessage(message.time)}>Yes</a>\r\n                                                </p>\r\n                                            </div>\r\n                                        </span>}\r\n\r\n                                        <span className=\"encryptPopUp\"\r\n                                              onClick={(e) => this.__doEncryptType(e, index)}>\r\n                                            {this.state.encryptIcon ? <Icon name=\"unlocked\" /> :\r\n                                            <Icon name=\"locked\" />}\r\n                                        </span>\r\n\r\n                                        {__detectCryptIcon(message) ? <img src=\"./assets/images/key.png\" alt=\"iconSend\"/> :\r\n\r\n                                            <span>{message.isEncrypt === false ? message.decryptedMsg ://there will be some case which is equal undefined\r\n                                                message.isEncrypt === true ? message.encryptedMsg : message.message} </span>} {message.edited && <span className=\"edited-msg\">(edited)</span>}\r\n                                    </div>\r\n                                    <span className=\"time-wrap\">{moment(+message.time).format('lll')}</span>\r\n                                    {_isOwner ? (index === this.state.messagesSelector.length - 1) ? this.props.activeUser.isSeen ?\r\n                                        <div className=\"status-message\">Seen</div>: <div className=\"status-message\">Delivered</div> : '' : ''}\r\n                                </div>}\r\n                            </div>\r\n                        )\r\n                    })}\r\n                    <div ref={(el) => { this._messagesEnd = el }}>{/*Scroll Into View*/}</div>\r\n                </div>\r\n                {this.props.activeUser.isTyping && <div className=\"is-typing-wrap\">\r\n                    {this.FN + this.LN + ' is typing '}\r\n                    <div className='spinner'>\r\n                        <div className='bounce1'></div>\r\n                        <div className='bounce2'></div>\r\n                        <div className='bounce3'></div>\r\n                    </div>\r\n                </div>}\r\n                <style jsx global>{`\r\n                    .sbl-circ {\r\n                      height: 35px;\r\n                      width: 35px;\r\n                      color: #5a5a5a;\r\n                      position: relative;\r\n                      display: block;\r\n                      border: 2px solid;\r\n                      border-radius: 50%;\r\n                      border-top-color: transparent;\r\n                      animation: rotate 1s linear infinite; \r\n                      margin: 5px auto;\r\n                    }\r\n\r\n                    @keyframes rotate {\r\n                      0% {\r\n                        transform: rotate(0); }\r\n                      100% {\r\n                        transform: rotate(360deg); } \r\n                    }\r\n                        \r\n                    .messages-content {\r\n                        height: 100%;\r\n                        overflow-x: hidden;\r\n                        position: relative;\r\n                        padding-top: 10px;\r\n                    }\r\n                    .scroll-disable {\r\n                        overflow: hidden;\r\n                    }\r\n                    .messages-content ::-webkit-scrollbar {\r\n                      width: 0px;\r\n                      height: 10px;\r\n                    }\r\n                    \r\n                    .messages-content ::-webkit-scrollbar-thumb {\r\n                      background: transparent;\r\n                    }\r\n                    \r\n                    .messages-content ::-webkit-scrollbar-track {\r\n                      background: transparent;\r\n                    }\r\n                    .content-right_owner {\r\n                        display: flex;\r\n                        justify-content: flex-start;\r\n                        flex-flow: row-reverse;\r\n                        text-align: right;\r\n                        padding: 0 10px;\r\n                        margin: 7px;\r\n                    }\r\n                    .content-left_owner {\r\n                        display: flex;\r\n                        justify-content: end;\r\n                        text-align: left;\r\n                        padding: 0 10px;\r\n                        margin: 7px;\r\n                    }\r\n                    .content-left_owner .message-time {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: flex-start;\r\n                        padding: 5px 10px;\r\n                        max-width: 50%;\r\n                        position: relative;\r\n                    }\r\n                    .content-left_owner .removed-message, .content-right_owner .removed-message {\r\n                        padding: 5px 10px;\r\n                        max-width: 50%;\r\n                        position: relative;\r\n                        background-color: #d9d7d7;\r\n                        border-radius: 6px;\r\n                        font-size: 14px;\r\n                        height: 27px;\r\n                        font-style: italic;\r\n                        color: #767575;\r\n                        margin-top: 5px;\r\n                        margin-bottom: 10px;\r\n                    }\r\n                    .content-left_owner .removed-message {\r\n                        margin-left: 10px;\r\n                    }\r\n                    .content-right_owner .removed-message {\r\n                        margin-right: 10px;\r\n                    }\r\n                    .content-right_owner .message-time {\r\n                        display: flex;\r\n                        flex-direction: column;\r\n                        align-items: flex-end;\r\n                        padding: 5px 10px;\r\n                        max-width: 50%;\r\n                        position: relative;\r\n                    }\r\n                    .content-left_owner .message-time > div.separate-p .edited-msg, \r\n                    .content-right_owner .message-time > div.separate-p .edited-msg{\r\n                        font-size: 10px;\r\n                        font-family: sans-serif;\r\n                        font-style: italic;\r\n                    }\r\n                    .content-left_owner .crypt-message > div.separate-p, \r\n                    .content-right_owner .crypt-message > div.separate-p {\r\n                        background-color: transparent !important;\r\n                        padding: 0 !important;\r\n                        height: 27px;\r\n                    }\r\n                    .content-left_owner .crypt-message > div.separate-p img, \r\n                    .content-right_owner .crypt-message > div.separate-p img{\r\n                        width: 30px;\r\n                    }\r\n                    .content-left_owner .crypt-message > div.separate-p:before, .content-right_owner .crypt-message > div.separate-p:before {\r\n                        border-color: transparent !important;\r\n                    }\r\n                    .message-time .status-message {\r\n                        font-size: 12px;\r\n                        color: #424242;\r\n                    }\r\n                    .message-time:hover > span {\r\n                        opacity: 1 !important;\r\n                        visibility: visible !important;\r\n                    }\r\n                    .content-right_owner .message-time > span,\r\n                    .content-left_owner .message-time > span {\r\n                        opacity: 0;\r\n                        transition: .4s;\r\n                        font-size: 9px;\r\n                        font-family: sans-serif;\r\n                        position: absolute;\r\n                        top: -13px;\r\n                        text-align: center;\r\n                        min-width: fit-content;\r\n                        background-color: red;\r\n                        padding: 3px 5px;\r\n                        color: #fff;\r\n                        flex-shrink: 0;\r\n                        white-space: nowrap;\r\n                        border-radius: 4px;\r\n                        visibility: hidden;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove i{\r\n                        padding: 2px 4px;    \r\n                        position: relative;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove i.lnr-pencil:after{\r\n                        content: '';\r\n                        position: absolute;\r\n                        width: 5px;\r\n                        height: 5px;\r\n                        background: ${this.state.rightColor};\r\n                        top: 0;\r\n                        right: -5px;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove i.lnr-cross:after{\r\n                        content: '';\r\n                        position: absolute;\r\n                        width: 5px;\r\n                        height: 5px;\r\n                        background: ${this.state.rightColor};\r\n                        bottom: 0;\r\n                        right: -5px;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove .remove-confirm-container p {\r\n                        margin: 4px 0 0;\r\n                        display: flex;\r\n                        justify-content: flex-end;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove .remove-confirm-container p > a:first-child{\r\n                        height: 19px;\r\n                        display: inline-block;\r\n                        border: 1px solid #ccc;\r\n                        width: 25px;\r\n                        border-radius: 2px;\r\n                        text-align: center;\r\n                        font-size: 12px;\r\n                        vertical-align: middle;\r\n                        margin-right: 7px;\r\n                        background-color: ${this.state.rightColor};\r\n                        color: #fff;\r\n                        cursor: pointer;\r\n                    } \r\n                    .opened-pop-confirm-remove .edit-remove {\r\n                        opacity: 1 !important;\r\n                        visibility: visible !important;\r\n                        left: -18px !important;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove .remove-confirm-container p > a:last-child{\r\n                        height: 19px;\r\n                        display: inline-block;\r\n                        border: 1px solid #ccc;\r\n                        width: 25px;\r\n                        border-radius: 2px;\r\n                        text-align: center;\r\n                        font-size: 12px;\r\n                        vertical-align: middle;\r\n                        background-color: #c5cbca;\r\n                        color: #fff;\r\n                        cursor: pointer;\r\n                    } \r\n                    .content-right_owner .message-time > div.separate-p .edit-remove .remove-confirm-container{ \r\n                        position: absolute;\r\n                        width: 120px;\r\n                        right: 24px;\r\n                        padding: 6px;\r\n                        color: #000;\r\n                        font-size: 13px;\r\n                        border: 1px solid #ccc;\r\n                        border-radius: 3px;\r\n                        top: 14px;\r\n                        bottom: 0;\r\n                        margin: auto;\r\n                        height: 55px;\r\n                        opacity: 0;\r\n                        z-index: 22;\r\n                        background: #fff;\r\n                        transition: .4s;\r\n                        visibility: hidden;\r\n                        cursor: default;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove .remove-confirm-container:after{\r\n                        content: '';\r\n                        width: 0;\r\n                        height: 0;\r\n                        border-top: 4px solid transparent;\r\n                        border-bottom: 4px solid transparent;\r\n                        border-left: 4px solid #dcdcdc;\r\n                        position: absolute;\r\n                        right: -4px;\r\n                        -webkit-transform: rotate(0deg);\r\n                        -ms-transform: rotate(0deg);\r\n                        transform: rotate(0deg);\r\n                        top: 21px;\r\n                    } \r\n                    .content-right_owner .message-time > div.separate-p .edit-remove .remove-confirm-container:before{\r\n                        content: '';\r\n                        width: 0;\r\n                        height: 0;\r\n                        border-top: 3px solid transparent;\r\n                        border-bottom: 3px solid transparent;\r\n                        border-left: 3px solid #fff;\r\n                        position: absolute;\r\n                        right: -3px;\r\n                        -webkit-transform: rotate(0deg);\r\n                        -ms-transform: rotate(0deg);\r\n                        transform: rotate(0deg);\r\n                        top: 22px;\r\n                        z-index: 22;\r\n                    } \r\n                    .opened-pop-confirm-remove .remove-confirm-container {\r\n                        opacity: 1 !important;\r\n                        visibility: visible !important;\r\n                    }\r\n                    .opened-pop-confirm-remove + .time-wrap {\r\n                        display: none;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove{\r\n                        position: absolute;\r\n                        left: -15px;\r\n                        background: ${this.state.rightColor};\r\n                        display: -webkit-box;\r\n                        display: -webkit-flex;\r\n                        display: -ms-flexbox;\r\n                        display: flex;\r\n                        -webkit-flex-direction: column;\r\n                        -ms-flex-direction: column;\r\n                        flex-direction: column;\r\n                        top: 0;\r\n                        width: 18px;\r\n                        font-size: 9px;\r\n                        height: 27px;\r\n                        -webkit-box-pack: justify;\r\n                        -webkit-justify-content: space-between;\r\n                        -ms-flex-pack: justify;\r\n                        justify-content: space-between;\r\n                        border-right: 1px solid;\r\n                        opacity: 0;\r\n                        transition: .2s;\r\n                        visibility: hidden;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p:hover .edit-remove{\r\n                        opacity: 1;\r\n                        visibility: visible;\r\n                        left: -18px;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove:after{\r\n                        content: '';\r\n                        position: absolute;\r\n                        top: 0;\r\n                        bottom: 0;\r\n                        left: 0;\r\n                        right: 0;\r\n                        height: 0.8px;\r\n                        width: 18px;\r\n                        margin: auto;\r\n                        background: #fff;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .edit-remove:before{\r\n                        content: '';\r\n                        position: absolute;\r\n                        top: 0;\r\n                        bottom: 0;\r\n                        right: -1px;\r\n                        height: 27px;\r\n                        width: 0.8px;\r\n                        margin: auto;\r\n                        background: #fff;\r\n                        z-index: 2;\r\n                    }\r\n                    .opened-encryptPopUp .edit-remove {\r\n                        display: none !important;\r\n                    }\r\n                    \r\n                    .content-right_owner .message-time > div.separate-p .encryptPopUp,\r\n                    .content-left_owner .message-time > div.separate-p .encryptPopUp{\r\n                        position: absolute;\r\n                        height: 25px;\r\n                        display: none;\r\n                        width: 25px;\r\n                        padding: 2px;\r\n                        bottom: 0;\r\n                        top: 0;\r\n                        margin: auto;\r\n                        cursor: pointer;\r\n                        border-radius: 5px;\r\n                        \r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p .encryptPopUp {\r\n                        left: -30px;\r\n                    }\r\n                    .content-left_owner .message-time > div.separate-p .encryptPopUp{\r\n                        right: -30px;\r\n                    }\r\n                    \r\n                    .opened-encryptPopUp {\r\n                        background-color: #e7e7e7 !important;\r\n                        color: #000 !important;\r\n                    } \r\n                    .opened-encryptPopUp:before {\r\n                        border-left-color: #e7e7e7 !important;\r\n                    }\r\n                    .opened-encryptPopUp .encryptPopUp{\r\n                        display: block !important;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p,\r\n                    .content-left_owner .message-time > div.separate-p {\r\n                        cursor: pointer;\r\n                        text-align:left;\r\n                        margin: 0 0 5px 0;\r\n                        display: inline-block;\r\n                        padding: 5px 10px;\r\n                        color: #fff;\r\n                        font-size: 13px;\r\n                        border-radius: 5px;\r\n                        position: relative;\r\n                        min-height: 27px;\r\n                        word-break: break-all;\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p, .content-right_owner .message-time > span {\r\n                        background-color: ${this.state.rightColor};\r\n                    }\r\n                    .content-left_owner .message-time > div.separate-p, .content-left_owner .message-time > span {\r\n                        background-color: ${this.state.leftColor};\r\n                    }\r\n                    .content-right_owner .message-time > div.separate-p:before {\r\n                        content: '';\r\n                        width: 0;\r\n                        height: 0;\r\n                        border-top: 4px solid transparent;\r\n                        border-bottom: 4px solid transparent;\r\n                        border-left: 4px solid ${this.state.rightColor};\r\n                        position: absolute;\r\n                        right: -3px;\r\n                        transform: rotate(0deg);\r\n                        top: 7px;\r\n                    }\r\n                    .content-left_owner .message-time > div.separate-p:before {\r\n                        content: '';\r\n                        width: 0;\r\n                        height: 0;\r\n                        border-top: 4px solid transparent;\r\n                        border-bottom: 4px solid transparent;\r\n                        border-left: 4px solid ${this.state.leftColor};\r\n                        position: absolute;\r\n                        left: -3px;\r\n                        transform: rotate(-180deg);\r\n                        top: 7px;\r\n                    }\r\n                    \r\n                    .is-typing-wrap {\r\n                        margin-left: 20px;\r\n                        margin-bottom: 7px;\r\n                        display: flex;\r\n                        align-items: center;\r\n                        font-size: 13px;\r\n                    }\r\n                    .is-typing-wrap .spinner{ \r\n                        margin-top: 5px;\r\n                        margin-left: 10px;\r\n                    }\r\n                `}</style>\r\n            </>\r\n       )\r\n    }\r\n}\r\n\r\nPrivateMessageContent.propTypes = {\r\n    messagesHaveBeenDeleted: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    loggedUser: state.chat.loggedUser,\r\n    activeUser: state.chat.activeUser,\r\n    messages: state.chat.activeUserMessages,\r\n    messagesPage: state.chat.messagesPage,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    __LOAD_MORE_MESSAGES\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(PrivateMessageContent);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AAGA;AACA;AAIA;;;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAxCA;AAyCA;AACA;;;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAGA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AADA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AAGA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AADA;AAGA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AASA;AAAA;AACA;AAAA;AAIA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/DA;AAAA;AAAA;AAAA;AAidA;;;AA1dA;AACA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;;;;AAnQA;AACA;AA0tBA;AACA;AADA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AACA;AAMA;AACA;AADA;AAIA;;;;A","sourceRoot":""}