{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport UI_ELEMENTS from \"../shared/UI\";\nimport fire from \"../../config/fire\";\nimport Skeleton from \"../Skeleton\";\nimport { __GET_ALL_USERS } from \"store/saga\";\nimport { connect } from \"react-redux\";\nimport { Bus } from 'components/shared/helpers/Bus';\n\nfunction EveryUser(props) {\n  var _useState = useState(false),\n      loadingPrivateIcon = _useState[0],\n      setLoadingPrivateIcon = _useState[1];\n\n  return __jsx(\"div\", {\n    className: \"user-messages-container\"\n  }, __jsx(UI_ELEMENTS.UserImage, {\n    firstName: props.dataMSG.fullName.split(' ')[0],\n    lastName: props.dataMSG.fullName.split(' ')[1] || '',\n    fill: props.dataMSG.color\n  }), __jsx(\"div\", {\n    className: \"user-chat-btn\"\n  }, __jsx(\"div\", {\n    className: \"user-message-info_left\"\n  }, __jsx(\"h4\", null, props.dataMSG.fullName)), __jsx(\"a\", {\n    onClick: function onClick() {\n      Bus.dispatch('startChat', {\n        id: props.dataMSG.id,\n        color: props.dataMSG.color,\n        isSeen: true,\n        isTyping: false,\n        countMessagesDelivered: 0,\n        fullName: props.dataMSG.fullName,\n        isSender: true,\n        letters: {\n          message: '',\n          time: null\n        }\n      });\n      setLoadingPrivateIcon(true);\n    },\n    className: fire.auth().currentUser.email === props.dataMSG.email ? 'disable-btn common-room-btn' : 'common-room-btn'\n  }, fire.auth().currentUser.email === props.dataMSG.email ? __jsx(\"span\", {\n    className: \"you\",\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    }\n  }, \"You\") : loadingPrivateIcon ? __jsx(\"div\", {\n    className: \"sbl-circ\"\n  }) : __jsx(\"span\", {\n    className: \"lnr lnr-envelope\"\n  }))));\n}\n\nvar CommonRoom = function CommonRoom(props) {\n  useEffect(function () {\n    if (props.allChatUsers == null) {\n      __GET_ALL_USERS().next();\n    }\n\n    return function () {\n      __GET_ALL_USERS({}).next();\n    };\n  }, []);\n  return __jsx(\"div\", {\n    className: \"jsx-3815667810\" + \" \" + \"\".concat(!props.startedNewChat ? 'until-load-allowing' : '', \" main-room-list\")\n  }, props.usersList === null && new Array(8).fill('').map(function (_, i) {\n    return __jsx(\"div\", {\n      key: i + Math.random().toString(16).slice(2, 6),\n      style: {\n        opacity: (8 - i) * 0.09\n      },\n      className: \"jsx-3815667810\" + \" \" + \"skeleton-container\"\n    }, __jsx(Skeleton, {\n      width: \"35px\",\n      height: \"35px\",\n      margin: ['5px', '10px', '0px', '10px'],\n      radius: \"50%\"\n    }), __jsx(\"div\", {\n      className: \"jsx-3815667810\" + \" \" + \"line-wrap\"\n    }, __jsx(Skeleton, {\n      width: \"100%\",\n      height: \"12px\",\n      margin: ['5px', '0px', '10px', '0px'],\n      radius: \"0%\"\n    }), __jsx(Skeleton, {\n      width: \"100%\",\n      height: \"12px\",\n      margin: ['5px', '0px', '10px', '0px'],\n      radius: \"0%\"\n    })));\n  }), props.usersList !== null && props.usersList.map(function (user) {\n    return __jsx(EveryUser, {\n      dataMSG: user,\n      key: user.id\n    });\n  }), __jsx(_JSXStyle, {\n    id: \"3815667810\"\n  }, [\".until-load-allowing{pointer-events:none;}\", \".sbl-circ{height:20px;width:20px;color:#5a5a5a;position:relative;display:block;border:1px solid;border-radius:50%;border-top-color:transparent;-webkit-animation:rotate 1s linear infinite;animation:rotate 1s linear infinite;margin:5px auto;}\", \"@-webkit-keyframes rotate{0%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}\", \"@keyframes rotate{0%{-webkit-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0);}100%{-webkit-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg);}}\", \".user-messages-container{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;padding:10px;border-bottom:1px solid #e3dede;}\", \".user-messages-container .user-chat-btn{padding-left:10px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-webkit-justify-content:space-between;-ms-flex-pack:justify;justify-content:space-between;width:calc(100% - 45px);-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;}\", \".common-room-btn{cursor:pointer;font-size:18px;margin-top:0px;display:inline-block;}\", \".common-room-btn>span.you{font-size:14px;}\", \".common-room-btn>span:not(.you):hover{font-weight:900;}\", \".user-messages-container .user-chat-btn .user-message-info_left h4{margin:0;max-height:40px;overflow:hidden;}\"]));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    usersList: state.chat.allChatUsers\n  };\n};\n\nvar mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(CommonRoom);","map":null,"metadata":{},"sourceType":"module"}