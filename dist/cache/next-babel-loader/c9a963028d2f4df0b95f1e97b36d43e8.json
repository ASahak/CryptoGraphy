{"ast":null,"code":"import rootReducer from 'store/reducers';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { _rootSaga } from 'store/saga';\nconst composeEnhancers = compose;\nconst state = {\n  chat: {\n    isShowModal: false,\n    loggedUser: null,\n    activeUser: {},\n    myChatUsers: null,\n    allChatUsers: null,\n    activeUserMessages: [],\n    mobileUsersListOpen: false,\n    mobileNotifyNewMsg: false,\n    messagesPage: 1,\n    encryptData: {\n      disabled: false,\n      key: '',\n      type: '',\n      warning: false\n    }\n  },\n  auth: {\n    isLoading: true,\n    isLogged: false\n  }\n};\nexport function configureStore(initialState = {}) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\n  store.runSaga = sagaMiddleware.run;\n  return store;\n}\nconst store = configureStore(state);\nstore.runSaga(_rootSaga);\nexport default store;","map":{"version":3,"sources":["C:/Users/ruala/Desktop/ASahak/daser/next/CryptoGraphy/store/index.js"],"names":["rootReducer","createStore","applyMiddleware","compose","createSagaMiddleware","_rootSaga","composeEnhancers","state","chat","isShowModal","loggedUser","activeUser","myChatUsers","allChatUsers","activeUserMessages","mobileUsersListOpen","mobileNotifyNewMsg","messagesPage","encryptData","disabled","key","type","warning","auth","isLoading","isLogged","configureStore","initialState","sagaMiddleware","store","runSaga","run"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,gBAAgB,GAAGH,OAAzB;AAEA,MAAMI,KAAK,GAAG;AACVC,EAAAA,IAAI,EAAE;AACFC,IAAAA,WAAW,EAAE,KADX;AAEFC,IAAAA,UAAU,EAAE,IAFV;AAGFC,IAAAA,UAAU,EAAE,EAHV;AAIFC,IAAAA,WAAW,EAAE,IAJX;AAKFC,IAAAA,YAAY,EAAE,IALZ;AAMFC,IAAAA,kBAAkB,EAAE,EANlB;AAOFC,IAAAA,mBAAmB,EAAE,KAPnB;AAQFC,IAAAA,kBAAkB,EAAE,KARlB;AASFC,IAAAA,YAAY,EAAE,CATZ;AAUFC,IAAAA,WAAW,EAAE;AACTC,MAAAA,QAAQ,EAAE,KADD;AAETC,MAAAA,GAAG,EAAE,EAFI;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,OAAO,EAAE;AAJA;AAVX,GADI;AAkBVC,EAAAA,IAAI,EAAE;AACFC,IAAAA,SAAS,EAAE,IADT;AAEFC,IAAAA,QAAQ,EAAE;AAFR;AAlBI,CAAd;AAwBA,OAAO,SAASC,cAAT,CAAwBC,YAAY,GAAG,EAAvC,EAA2C;AAC9C,QAAMC,cAAc,GAAGxB,oBAAoB,EAA3C;AACA,QAAMyB,KAAK,GAAG5B,WAAW,CAACD,WAAD,EAAc2B,YAAd,EAA4BrB,gBAAgB,CAACJ,eAAe,CAAC0B,cAAD,CAAhB,CAA5C,CAAzB;AACAC,EAAAA,KAAK,CAACC,OAAN,GAAgBF,cAAc,CAACG,GAA/B;AACA,SAAOF,KAAP;AACH;AACD,MAAMA,KAAK,GAAGH,cAAc,CAACnB,KAAD,CAA5B;AAEAsB,KAAK,CAACC,OAAN,CAAczB,SAAd;AACA,eAAewB,KAAf","sourcesContent":["import rootReducer from 'store/reducers';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { _rootSaga } from 'store/saga';\r\n\r\nconst composeEnhancers = compose;\r\n\r\nconst state = {\r\n    chat: {\r\n        isShowModal: false,\r\n        loggedUser: null,\r\n        activeUser: {},\r\n        myChatUsers: null,\r\n        allChatUsers: null,\r\n        activeUserMessages: [],\r\n        mobileUsersListOpen: false,\r\n        mobileNotifyNewMsg: false,\r\n        messagesPage: 1,\r\n        encryptData: {\r\n            disabled: false,\r\n            key: '',\r\n            type: '',\r\n            warning: false\r\n        }\r\n    },\r\n    auth: {\r\n        isLoading: true,\r\n        isLogged: false\r\n    }\r\n};\r\n\r\nexport function configureStore(initialState = {}) {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const store = createStore(rootReducer, initialState, composeEnhancers(applyMiddleware(sagaMiddleware)));\r\n    store.runSaga = sagaMiddleware.run;\r\n    return store;\r\n}\r\nconst store = configureStore(state);\r\n\r\nstore.runSaga(_rootSaga);\r\nexport default store;"]},"metadata":{},"sourceType":"module"}