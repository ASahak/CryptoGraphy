{"ast":null,"code":"import _Reflect$construct from \"@babel/runtime-corejs2/core-js/reflect/construct\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(_Reflect$construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport App from 'next/app';\nimport GlobalStyle from \"components/shared/helpers/global-styles\";\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nvar AppWrapper = /*#__PURE__*/function (_App) {\n  _inherits(AppWrapper, _App);\n\n  var _super = _createSuper(AppWrapper);\n\n  function AppWrapper(props) {\n    _classCallCheck(this, AppWrapper);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(AppWrapper, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          initialProps = _this$props.initialProps;\n      return __jsx(React.Fragment, null, __jsx(GlobalStyle, null), __jsx(Provider, {\n        store: store\n      }, __jsx(Component, _extends({}, pageProps, initialProps))));\n    }\n  }]);\n\n  return AppWrapper;\n}(App);\n\nexport default AppWrapper;","map":null,"metadata":{},"sourceType":"module"}