{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport UI_ELEMENTS from 'components/shared/UI';\nimport Icon from 'components/Icons/icon';\nimport Messages from \"components/Messages\";\nimport { connect } from \"react-redux\";\nimport { __CHANGE_STATUS_MODAL, __SET_ENCRYPT_DATA, __CHANGE_MOBILE_LIST_OPEN } from 'store/actions';\n\nclass ChatMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this._encryptData = [{\n      value: 'substitution',\n      name: 'Substitution'\n    }, {\n      value: 'vigenere',\n      name: 'Vigenere'\n    }, {\n      value: 'caesar',\n      name: 'Caesar'\n    }, {\n      value: 'playfair',\n      name: 'Playfair'\n    }, {\n      value: 'vernam',\n      name: 'Vernam'\n    }];\n    this.__selectEncrypt = this.__selectEncrypt.bind(this);\n    this.__generateValue = this.__generateValue.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.encryptData.type !== this.props.encryptData.type) {\n      if (this.props.encryptData.type === 'substitution') {\n        this.props.__SET_ENCRYPT_DATA([{\n          type: 'key',\n          value: ''\n        }, {\n          type: 'warning',\n          value: false\n        }, {\n          type: 'disabled',\n          value: true\n        }]);\n      } else if (this.props.encryptData.type === 'vernam') {\n        this.props.__SET_ENCRYPT_DATA([{\n          type: 'key',\n          value: ''\n        }, {\n          type: 'warning',\n          value: false\n        }, {\n          type: 'disabled',\n          value: true\n        }]);\n      } else {\n        let value = this.props.encryptData.type === 'caesar' ? 3 : '';\n\n        this.props.__SET_ENCRYPT_DATA([{\n          type: 'key',\n          value: value\n        }, {\n          type: 'warning',\n          value: false\n        }, {\n          type: 'disabled',\n          value: false\n        }]);\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.props.__SET_ENCRYPT_DATA({\n      type: 'type',\n      value: 'substitution'\n    });\n  }\n\n  __generateValue(value) {\n    this.props.__SET_ENCRYPT_DATA({\n      type: 'key',\n      value: ''\n    });\n\n    if (this.props.encryptData.type === 'caesar' && value === '') {\n      value = 3;\n    }\n\n    return value;\n  }\n\n  __selectEncrypt(data) {\n    this.props.__SET_ENCRYPT_DATA({\n      type: 'type',\n      value: data\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"265333361\", [!this.props.mobileUsersListOpen ? 1 : 0, !this.props.mobileUsersListOpen ? 100 : 0]]]) + \" \" + \"chat-messages\"\n    }, __jsx(\"div\", {\n      className: _JSXStyle.dynamic([[\"265333361\", [!this.props.mobileUsersListOpen ? 1 : 0, !this.props.mobileUsersListOpen ? 100 : 0]]]) + \" \" + \"select-bar\"\n    }, __jsx(\"span\", {\n      onClick: () => this.props.__CHANGE_MOBILE_LIST_OPEN(true),\n      className: _JSXStyle.dynamic([[\"265333361\", [!this.props.mobileUsersListOpen ? 1 : 0, !this.props.mobileUsersListOpen ? 100 : 0]]]) + \" \" + `lnr lnr-menu d-none_sm ${this.props.mobileNotifyNewMsg ? 'new-mobile-msg' : ''}`\n    }), __jsx(UI_ELEMENTS.Select, {\n      selectEncrypt: this.__selectEncrypt,\n      placeholder: \"Please choose encrypt type\",\n      style: {\n        display: 'block',\n        width: '70%',\n        padding: '12px',\n        border: 'none',\n        borderBottom: '1px solid #e3dede',\n        marginLeft: '1px',\n        backgroundColor: 'transparent'\n      },\n      dataOptions: this._encryptData\n    }), __jsx(\"div\", {\n      style: {\n        height: '100%'\n      },\n      className: _JSXStyle.dynamic([[\"265333361\", [!this.props.mobileUsersListOpen ? 1 : 0, !this.props.mobileUsersListOpen ? 100 : 0]]]) + \" \" + ((this.props.encryptData.warning ? 'warning-wrap' : '') || \"\")\n    }, __jsx(UI_ELEMENTS.Input, {\n      name: \"key\",\n      attr: this.props.encryptData.type === 'caesar' ? [{\n        name: 'min',\n        value: 1\n      }] : [],\n      type: this.props.encryptData.type === 'caesar' ? 'number' : 'text',\n      id: \"key\",\n      disabled: this.props.encryptData.disabled,\n      value: this.props.encryptData.key,\n      refBind: React.createRef(),\n      placeholder: this.props.encryptData.type === 'caesar' ? \"Press 1-25 digits only\" : \"Key\",\n      events: ['change', 'input'],\n      onChange: e => {\n        this.props.__SET_ENCRYPT_DATA({\n          type: 'key',\n          value: this.__generateValue(e.target.value)\n        });\n      },\n      onInput: () => this.props.__SET_ENCRYPT_DATA({\n        type: 'warning',\n        value: false\n      }),\n      size: \"md\"\n    })), __jsx(\"span\", {\n      onClick: () => this.props.__CHANGE_STATUS_MODAL(),\n      className: _JSXStyle.dynamic([[\"265333361\", [!this.props.mobileUsersListOpen ? 1 : 0, !this.props.mobileUsersListOpen ? 100 : 0]]]) + \" \" + `show-modal-icon ${!this.props.isShowModal ? 'disable-modal' : ''}`\n    }, __jsx(Icon, {\n      name: \"modal\"\n    }))), __jsx(Messages, null), __jsx(_JSXStyle, {\n      id: \"265333361\",\n      dynamic: [!this.props.mobileUsersListOpen ? 1 : 0, !this.props.mobileUsersListOpen ? 100 : 0]\n    }, [\".chat-messages .select-bar .disable-modal svg{opacity:0.3;-webkit-filter:blur(1px);filter:blur(1px);}\", \".chat-messages .select-bar .show-modal-icon{height:100%;width:61px;display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-webkit-justify-content:center;-ms-flex-pack:center;justify-content:center;border-left:1px solid rgb(227,222,222);cursor:pointer;}\", \".chat-messages .select-bar .input-wrap{height:100%;}\", \".chat-messages .select-bar .input-wrap input{margin-bottom:0;height:100%;background-color:#fff;border-left:1px solid rgb(227,222,222) !important;border-top:0;border-right:0;}\", \".chat-messages .select-bar{display:-webkit-box;display:-webkit-flex;display:-ms-flexbox;display:flex;-webkit-align-items:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;height:41.8px;border-bottom:1px solid rgb(227,222,222);}\", \".chat-messages .select-bar .lnr-menu{font-size:26px;padding-left:10px;cursor:pointer;}\", \".chat-messages .select-bar .warning-wrap{box-shadow:0 0 0 0 rgba(0,0,0,1);-webkit-animation:pulse 1.5s infinite;animation:pulse 1.5s infinite;}\", \"@-webkit-keyframes pulse{0%{box-shadow:0 0 0 0 rgba(214,20,20,0.7);}70%{box-shadow:0 0 0 4px rgba(182,13,13,0);}100%{box-shadow:0 0 0 0 rgba(0,0,0,0);}}\", \"@keyframes pulse{0%{box-shadow:0 0 0 0 rgba(214,20,20,0.7);}70%{box-shadow:0 0 0 4px rgba(182,13,13,0);}100%{box-shadow:0 0 0 0 rgba(0,0,0,0);}}\", \".chat-messages{width:70%;box-shadow:0 3px 1px -2px rgba(0,0,0,0.2),0 2px 2px 0 rgba(0,0,0,0.14),0 1px 5px 0 rgba(0,0,0,0.12);}\", \".d-none_sm{display:none;}\", \".new-mobile-msg{position:relative;}\", \".new-mobile-msg:after{content:\\\"\\\";position:absolute;top:0px;right:-3px;width:10px;height:10px;background:red;border-radius:50%;}\", `@media screen and (max-width:767px){.d-none_sm{display:block;}.chat-messages{opacity:${!this.props.mobileUsersListOpen ? 1 : 0};-webkit-transition:width .2s;transition:width .2s;overflow:hidden;width:${!this.props.mobileUsersListOpen ? 100 : 0}%;}}`]));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isShowModal: state.chat.isShowModal,\n  encryptData: state.chat.encryptData,\n  mobileUsersListOpen: state.chat.mobileUsersListOpen,\n  mobileNotifyNewMsg: state.chat.mobileNotifyNewMsg\n});\n\nconst mapDispatchToProps = {\n  __CHANGE_STATUS_MODAL,\n  __SET_ENCRYPT_DATA,\n  __CHANGE_MOBILE_LIST_OPEN\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatMessages);","map":null,"metadata":{},"sourceType":"module"}