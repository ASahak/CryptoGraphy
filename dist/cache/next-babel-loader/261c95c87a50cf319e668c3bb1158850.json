{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport Login from '../pages/login';\nimport * as authService from './auth-service';\nimport { __bodyLoading } from 'components/shared/helpers/global-functions';\nexport default function withAuth(AuthComponent) {\n  return /*#__PURE__*/function (_Component) {\n    _inherits(Authenticated, _Component);\n\n    var _super = _createSuper(Authenticated);\n\n    function Authenticated(props) {\n      var _this;\n\n      _classCallCheck(this, Authenticated);\n\n      _this = _super.call(this, props);\n      _this.state = {\n        isAuth: false,\n        isLoading: true\n      };\n\n      __bodyLoading(_this.state.isLoading);\n\n      authService.__isLogged().then(function (res) {\n        if (res) {\n          if (Router.pathname === '/login' || Router.pathname === '/register') {\n            Router.push('/');\n\n            _this.setState({\n              isAuth: true\n            });\n          } else {\n            _this.setState({\n              isAuth: true,\n              isLoading: false\n            }, function () {\n              return __bodyLoading(_this.state.isLoading, _this.state.isAuth);\n            });\n          }\n        } else {\n          _this.setState({\n            isLoading: false\n          }, function () {\n            __bodyLoading(_this.state.isLoading, _this.state.isAuth);\n\n            Router.replace('/login');\n          });\n        }\n      });\n\n      return _this;\n    }\n\n    _createClass(Authenticated, [{\n      key: \"render\",\n      value: function render() {\n        return __jsx(\"div\", null, !this.state.isLoading && (this.state.isAuth ? __jsx(AuthComponent, _extends({}, this.props, {\n          auth: authService\n        })) : __jsx(Login, null)));\n      }\n    }]);\n\n    return Authenticated;\n  }(Component);\n}\n;","map":null,"metadata":{},"sourceType":"module"}