{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MY_USERS, ALL_USERS, ACTIVE_USER, MY_DATA, SET_USER_MESSAGES, LOAD_MORE_MESSAGES, STATUS_MODAL, SET_ENCRYPT_DATA, CHANGE_MOBILE_LIST_OPEN, SEND_MOBILE_MESSAGE_NOTIFY } from '../types';\n\nvar chat = function chat() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_ENCRYPT_DATA:\n      return _objectSpread({}, state, {\n        encryptData: _objectSpread({}, state.encryptData, {}, function () {\n          var makeObj = {};\n\n          if (action.payload instanceof Array) {\n            action.payload.map(function (obj) {\n              return makeObj[obj.type] = obj.value;\n            });\n          } else makeObj[action.payload.type] = action.payload.value;\n\n          return makeObj;\n        }())\n      });\n\n    case STATUS_MODAL:\n      return _objectSpread({}, state, {\n        isShowModal: !state.isShowModal\n      });\n\n    case LOAD_MORE_MESSAGES:\n      return _objectSpread({}, state, {\n        messagesPage: state.messagesPage += action.payload\n      });\n\n    case SET_USER_MESSAGES:\n      return _objectSpread({}, state, {\n        activeUserMessages: action.payload\n      });\n\n    case CHANGE_MOBILE_LIST_OPEN:\n      return _objectSpread({}, state, {\n        mobileUsersListOpen: action.payload\n      });\n\n    case MY_DATA:\n      return _objectSpread({}, state, {\n        loggedUser: action.payload\n      });\n\n    case MY_USERS:\n      return _objectSpread({}, state, {\n        myChatUsers: action.payload\n      });\n\n    case SEND_MOBILE_MESSAGE_NOTIFY:\n      return _objectSpread({}, state, {\n        mobileNotifyNewMsg: action.payload\n      });\n\n    case ALL_USERS:\n      action.payload && state.myChatUsers.map(function (item) {\n        action.payload.splice(action.payload.findIndex(function (el) {\n          return el.id === item.id;\n        }), 1);\n      });\n      return _objectSpread({}, state, {\n        allChatUsers: action.payload\n      });\n\n    case ACTIVE_USER:\n      return _objectSpread({}, state, {\n        activeUser: action.payload || {}\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default chat;","map":null,"metadata":{},"sourceType":"module"}