{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar Vernam = /*#__PURE__*/function () {\n  function Vernam() {\n    _classCallCheck(this, Vernam);\n  }\n\n  _createClass(Vernam, null, [{\n    key: \"generateRandomStringByAmount\",\n    value: function generateRandomStringByAmount(length) {\n      var result = '';\n      var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n      var charactersLength = characters.length;\n\n      for (var i = 0; i < length; i++) {\n        result += characters.charAt(Math.floor(Math.random() * charactersLength));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"doEncrypt\",\n    value: function doEncrypt(msg, callback) {\n      var sum = [];\n      var enc = [];\n      this.letters = new Array(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\");\n      var input = msg.toUpperCase();\n      var key = this.generateRandomStringByAmount(msg.length).toUpperCase();\n      var inputIndex;\n      callback(key);\n\n      for (var i = 0; i < msg.length; i++) {\n        inputIndex = this.letters.indexOf(input[i]);\n        var keyIndex = this.letters.indexOf(key[i]);\n        sum[i] = inputIndex + keyIndex;\n\n        if (sum[i] >= 26) {\n          sum[i] = sum[i] % 26;\n        }\n      }\n\n      for (var j = 0; j < msg.length; j++) {\n        enc[j] = this.letters[sum[j]];\n        this.abc[j] = sum[j];\n      }\n\n      var encr = enc.toString();\n      var encrypt = encr.split(\",\").join(\"\");\n      return encrypt;\n    }\n  }, {\n    key: \"doDecrypt\",\n    value: function doDecrypt(msg, key) {\n      var arr = [];\n      var dec = []; // const enter = msg.toUpperCase();\n\n      var keyD = key.toUpperCase();\n\n      for (var k = 0; k < keyD.length; k++) {\n        var xyz = this.letters.indexOf(keyD[k]);\n        arr[k] = this.abc[k] - xyz;\n\n        if (arr[k] < 0) {\n          arr[k] += 26;\n        }\n      }\n\n      for (var m = 0; m < keyD.length; m++) {\n        dec[m] = this.letters[arr[m]];\n      }\n\n      var decr = dec.toString();\n      var decrypt = decr.split(\",\").join(\"\");\n      return decrypt;\n    }\n  }]);\n\n  return Vernam;\n}();\n\n_defineProperty(Vernam, \"letters\", []);\n\n_defineProperty(Vernam, \"abc\", []);\n\nexport { Vernam as default };","map":{"version":3,"sources":["C:/Users/ruala/Desktop/ASahak/daser/next/CryptoGraphy/libraries/Vernam.js"],"names":["Vernam","length","result","characters","charactersLength","i","charAt","Math","floor","random","msg","callback","sum","enc","letters","Array","input","toUpperCase","key","generateRandomStringByAmount","inputIndex","indexOf","keyIndex","j","abc","encr","toString","encrypt","split","join","arr","dec","keyD","k","xyz","m","decr","decrypt"],"mappings":"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","sourcesContent":["export default class Vernam {\r\n    static letters = [];\r\n    static abc = [];\r\n\r\n    static generateRandomStringByAmount(length) {\r\n        let result           = '';\r\n        let characters       = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        let charactersLength = characters.length;\r\n        for ( let i = 0; i < length; i++ ) {\r\n            result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n        }\r\n        return result;\r\n    }\r\n\r\n    static doEncrypt (msg, callback) {\r\n        const sum = [];\r\n        const enc = [];\r\n        this.letters = new Array(\"A\",\"B\",\"C\",\"D\",\"E\",\"F\",\"G\",\"H\",\"I\",\"J\",\"K\",\"L\",\"M\",\"N\",\"O\",\"P\",\"Q\",\"R\",\"S\",\"T\",\"U\",\"V\",\"W\",\"X\",\"Y\",\"Z\");\r\n\r\n        let input = msg.toUpperCase();\r\n        let key = this.generateRandomStringByAmount(msg.length).toUpperCase();\r\n        let inputIndex;\r\n        callback(key);\r\n        for(let i = 0;i < msg.length; i++)\r\n        {\r\n\r\n            inputIndex= this.letters.indexOf(input[i]);\r\n            let keyIndex = this.letters.indexOf(key[i]);\r\n            sum[i] = inputIndex+keyIndex;\r\n            if(sum[i]>=26)\r\n            {\r\n                sum[i]=sum[i]%26;\r\n            }\r\n\r\n        }\r\n        for(let j = 0; j < msg.length; j++){\r\n            enc[j] = this.letters[sum[j]];\r\n            this.abc[j] = sum[j];\r\n\r\n        }\r\n        const encr = enc.toString();\r\n        const encrypt = encr.split(\",\").join(\"\");\r\n        return encrypt\r\n    }\r\n    static doDecrypt (msg, key) {\r\n        const arr = [];\r\n        const dec = [];\r\n        // const enter = msg.toUpperCase();\r\n        const keyD = key.toUpperCase();\r\n        for(let k = 0; k < keyD.length; k++){\r\n            let xyz= this.letters.indexOf(keyD[k]);\r\n            arr[k] = this.abc[k]-xyz;\r\n            if(arr[k]<0)\r\n            {\r\n                arr[k]+=26;\r\n            }\r\n        }\r\n        for(let m = 0; m < keyD.length; m++)\r\n        {\r\n            dec[m] = this.letters[arr[m]];\r\n        }\r\n        const decr = dec.toString();\r\n        const decrypt = decr.split(\",\").join(\"\");\r\n        return decrypt;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}