{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect, useState } from 'react';\n\nconst Input = props => {\n  const styleDiv = _objectSpread({}, props.label && {\n    display: props.fullWidth ? 'flex' : 'inline-flex',\n    flexDirection: 'column'\n  }, {}, !props.label && {\n    display: props.fullWidth ? 'block' : 'inline-block'\n  });\n\n  useEffect(() => {\n    if (props.refBind.current) {\n      props.refBind.current.value = props.value;\n    }\n  }, [props.value]);\n  useEffect(() => {\n    if (props.refBind.current) {\n      if (props.attr.length) {\n        props.attr.map(attr => {\n          props.refBind.current.setAttribute(attr.name, attr.value);\n        });\n      }\n    }\n  }, [props.attr]);\n  useEffect(() => {\n    if (props.refBind.current) {\n      if (props.attr.length) {\n        props.attr.map(attr => {\n          props.refBind.current.setAttribute(attr.name, attr.value);\n        });\n      }\n\n      for (let event = 0; event < props.events.length; event++) {\n        props.refBind.current.addEventListener(props.events[event], props['on' + props.events[event].replace(props.events[event].charAt(0), props.events[event].charAt(0).toUpperCase())]);\n      }\n    }\n\n    return () => {\n      if (props.refBind.current) {\n        for (let event = 0; event < props.events.length; event++) {\n          props.refBind.current.removeEventListener(props.events[event], props['on' + props.events[event].replace(props.events[event].charAt(0), props.events[event].charAt(0).toUpperCase())]);\n        }\n      }\n    };\n  }, []);\n  return __jsx(\"div\", {\n    style: styleDiv,\n    className: \"jsx-2614468807\" + \" \" + `input-wrap ${props.errors ? 'error-field' : ''}`\n  }, props.label ? __jsx(\"label\", {\n    className: \"jsx-2614468807\"\n  }, props.label) : null, __jsx(\"input\", {\n    name: props.name,\n    ref: props.refBind,\n    type: props.type,\n    id: props.id,\n    disabled: props.disabled,\n    placeholder: props.placeholder || '',\n    className: \"jsx-2614468807\" + \" \" + ('input-' + props.size || \"\")\n  }), props.errors && __jsx(\"span\", {\n    className: \"jsx-2614468807\" + \" \" + \"error-line\"\n  }, props.errors), __jsx(_JSXStyle, {\n    id: \"2614468807\"\n  }, [\".input-wrap.jsx-2614468807 label.jsx-2614468807{font-weight:600;margin-bottom:5px;color:#37415c;}\", \".input-wrap.jsx-2614468807{position:relative;}\", \".input-wrap.jsx-2614468807 input.jsx-2614468807{width:100%;background:#E5E6E8;margin-bottom:20px;-webkit-transition:all 400ms cubic-bezier(0.175,0.885,0.32,1.275);transition:all 400ms cubic-bezier(0.175,0.885,0.32,1.275);position:relative;z-index:2;}\", \".input-wrap.jsx-2614468807 input.jsx-2614468807:disabled{background-color:#e7e7e7;}\", \".input-wrap.jsx-2614468807 .error-line.jsx-2614468807{position:absolute;left:0;bottom:0;display:inline-block;margin-bottom:10px;-webkit-transition:all 400ms cubic-bezier(0.175,0.885,0.32,1.275);transition:all 400ms cubic-bezier(0.175,0.885,0.32,1.275);font-size:14px;color:red;}\", \".input-wrap.jsx-2614468807 input[type=color].jsx-2614468807{height:46px;padding:6px 15px 6px 85%!important;}\", \".input-wrap.jsx-2614468807 input.input-md.jsx-2614468807{padding:15px;border:none;}\", \".error-field.jsx-2614468807 input.jsx-2614468807{margin-bottom:30px;}\"]));\n};\n\nInput.defaultProps = {\n  size: 'md',\n  type: 'text',\n  fullWidth: false,\n  events: [],\n  attr: []\n};\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}