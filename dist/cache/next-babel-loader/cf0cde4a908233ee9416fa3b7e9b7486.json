{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport Router from 'next/router';\nimport Login from '../pages/login';\nimport * as authService from './auth-service';\nimport { __bodyLoading } from 'components/shared/helpers/global-functions';\nexport default function withAuth(AuthComponent) {\n  return class Authenticated extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        isAuth: false,\n        isLoading: true\n      };\n\n      __bodyLoading(this.state.isLoading);\n\n      authService.__isLogged().then(res => {\n        if (res) {\n          if (Router.pathname === '/login' || Router.pathname === '/register') {\n            Router.push('/');\n            this.setState({\n              isAuth: true\n            });\n          } else {\n            this.setState({\n              isAuth: true,\n              isLoading: false\n            }, () => __bodyLoading(this.state.isLoading, this.state.isAuth));\n          }\n        } else {\n          this.setState({\n            isLoading: false\n          }, () => {\n            __bodyLoading(this.state.isLoading, this.state.isAuth);\n\n            Router.replace('/login');\n          });\n        }\n      });\n    }\n\n    render() {\n      return __jsx(\"div\", null, !this.state.isLoading && (this.state.isAuth ? __jsx(AuthComponent, _extends({}, this.props, {\n        auth: authService\n      })) : __jsx(Login, null)));\n    }\n\n  };\n}\n;","map":null,"metadata":{},"sourceType":"module"}