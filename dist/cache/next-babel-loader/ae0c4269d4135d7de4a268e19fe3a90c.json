{"ast":null,"code":"function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport default class Vernam {\n  static generateRandomStringByAmount(length) {\n    let result = '';\n    let characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let charactersLength = characters.length;\n\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n\n    return result;\n  }\n\n  static doEncrypt(msg, callback) {\n    const sum = [];\n    const enc = [];\n    this.letters = new Array(\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\");\n    let input = msg.toUpperCase();\n    let key = this.generateRandomStringByAmount(msg.length).toUpperCase();\n    let inputIndex;\n    callback(key);\n\n    for (let i = 0; i < msg.length; i++) {\n      inputIndex = this.letters.indexOf(input[i]);\n      let keyIndex = this.letters.indexOf(key[i]);\n      sum[i] = inputIndex + keyIndex;\n\n      if (sum[i] >= 26) {\n        sum[i] = sum[i] % 26;\n      }\n    }\n\n    for (let j = 0; j < msg.length; j++) {\n      enc[j] = this.letters[sum[j]];\n      this.abc[j] = sum[j];\n    }\n\n    const encr = enc.toString();\n    const encrypt = encr.split(\",\").join(\"\");\n    return encrypt;\n  }\n\n  static doDecrypt(msg, key) {\n    const arr = [];\n    const dec = []; // const enter = msg.toUpperCase();\n\n    const keyD = key.toUpperCase();\n\n    for (let k = 0; k < keyD.length; k++) {\n      let xyz = this.letters.indexOf(keyD[k]);\n      arr[k] = this.abc[k] - xyz;\n\n      if (arr[k] < 0) {\n        arr[k] += 26;\n      }\n    }\n\n    for (let m = 0; m < keyD.length; m++) {\n      dec[m] = this.letters[arr[m]];\n    }\n\n    const decr = dec.toString();\n    const decrypt = decr.split(\",\").join(\"\");\n    return decrypt;\n  }\n\n}\n\n_defineProperty(Vernam, \"letters\", []);\n\n_defineProperty(Vernam, \"abc\", []);","map":null,"metadata":{},"sourceType":"module"}