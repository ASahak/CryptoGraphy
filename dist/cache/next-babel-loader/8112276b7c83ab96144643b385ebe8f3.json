{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from 'react';\nimport App from 'next/app';\nimport GlobalStyle from \"components/shared/helpers/global-styles\";\nimport { Provider } from 'react-redux';\nimport store from 'store';\n\nclass AppWrapper extends App {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      initialProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(GlobalStyle, null), __jsx(Provider, {\n      store: store\n    }, __jsx(Component, _extends({}, pageProps, initialProps))));\n  }\n\n}\n\nexport default AppWrapper;","map":null,"metadata":{},"sourceType":"module"}