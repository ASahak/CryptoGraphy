{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport Head from 'next/head';\nimport Icon from 'components/Icons/icon';\nimport UI_ELEMENTS from 'components/shared/UI';\nimport Link from 'next/link';\nimport { useForm } from 'react-hook-form';\nimport fire from 'config/fire';\nimport Alert from 'components/shared/UI/Alert';\nimport Router from \"next/router\";\nimport * as authService from \"utils/auth-service\";\nimport { __bodyLoading } from 'components/shared/helpers/global-functions';\nimport { connect } from 'react-redux';\nimport { __CHANGE_STATUS_IS_LOADING } from 'store/actions';\n\nfunction LoginForm() {\n  var _timeout = 4000;\n\n  var _useState = useState(false),\n      loadingLogin = _useState[0],\n      setLoadingLogin = _useState[1];\n\n  var _useState2 = useState(''),\n      errorMessage = _useState2[0],\n      setErrorMessage = _useState2[1];\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      reset = _useForm.reset;\n\n  var onSubmit = function onSubmit(data) {\n    var timeStart = new Date().getTime();\n    setLoadingLogin(true);\n    fire.auth().signInWithEmailAndPassword(data.email, data.password).then(function (user) {\n      setLoadingLogin(false);\n      Router.replace('/');\n    })[\"catch\"](function (err) {\n      setLoadingLogin(false);\n      setErrorMessage(err.message);\n      reset();\n      var timeEnd = new Date().getTime();\n\n      if (timeEnd - timeStart > _timeout) {\n        setErrorMessage('');\n      } else {\n        setTimeout(function () {\n          setErrorMessage('');\n        }, _timeout - (timeEnd - timeStart));\n      }\n    });\n  };\n\n  return __jsx(\"form\", {\n    className: \"login-form\",\n    onSubmit: handleSubmit(onSubmit)\n  }, errorMessage && __jsx(Alert, {\n    type: \"error\",\n    timeout: _timeout,\n    message: errorMessage\n  }), __jsx(UI_ELEMENTS.Input, {\n    name: \"email\",\n    type: \"email\",\n    refBind: register({\n      required: 'Email is required',\n      pattern: {\n        value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n        message: \"Invalid email address\"\n      }\n    }),\n    fullWidth: true,\n    errors: errors.email && errors.email.message,\n    placeholder: \"Email ID\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Input, {\n    refBind: register({\n      required: \"You must specify a password\",\n      minLength: {\n        value: 8,\n        message: \"Password must have at least 8 characters\"\n      }\n    }),\n    errors: errors.password && errors.password.message,\n    name: \"password\",\n    type: \"password\",\n    fullWidth: true,\n    placeholder: \"Password\",\n    size: \"md\"\n  }), __jsx(UI_ELEMENTS.Button, {\n    type: \"submit\",\n    icon: loadingLogin ? {\n      dir: 'right',\n      element: 'loading'\n    } : {},\n    text: \"Login\",\n    width: 190,\n    size: \"md\"\n  }), __jsx(Link, {\n    href: \"/reset-password\",\n    prefetch: false\n  }, __jsx(\"a\", {\n    className: \"link-to-reset\"\n  }, \"Forgot password? click to reset\")), __jsx(Link, {\n    href: \"/register\",\n    prefetch: false\n  }, __jsx(\"a\", {\n    className: \"link-to-reset\"\n  }, \"I am new here. I want an account\")));\n}\n\nvar Login = /*#__PURE__*/function (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isLoading: _this.props.isLoading\n    };\n\n    __bodyLoading(_this.props.isLoading, false);\n\n    authService.__isLogged().then(function (res) {\n      if (res) {\n        Router.push('/');\n      } else {\n        _this.setState({\n          isLoading: false\n        }, function () {\n          return __bodyLoading(_this.state.isLoading, false);\n        });\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Login, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.__CHANGE_STATUS_IS_LOADING(false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.isLoading) return '';\n      return __jsx(\"div\", {\n        className: \"jsx-3113113131\" + \" \" + \"container\"\n      }, __jsx(Head, null, __jsx(\"title\", {\n        className: \"jsx-3113113131\"\n      }, \"Login\")), __jsx(\"main\", {\n        className: \"jsx-3113113131\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3113113131\" + \" \" + \"login-form-container\"\n      }, __jsx(\"div\", {\n        className: \"jsx-3113113131\" + \" \" + \"form-icon\"\n      }, __jsx(Icon, {\n        name: \"user\"\n      })), __jsx(\"h4\", {\n        className: \"jsx-3113113131\" + \" \" + \"title-form\"\n      }, \"Member Login\"), __jsx(LoginForm, null))), __jsx(_JSXStyle, {\n        id: \"3113113131\"\n      }, [\".login-form-container{position:absolute;left:0;right:0;margin:auto;width:400px;padding:25px 20px;background:#ececec30;bottom:0;top:0;height:-webkit-max-content;height:-moz-max-content;height:max-content;border-radius:5px;-webkit-backdrop-filter:blur(6px);-webkit-backdrop-filter:blur(6px);backdrop-filter:blur(6px);border:1px solid #ffffff24;}\", \".login-form-container .title-form{margin-bottom:10px;text-align:center;text-transform:uppercase;-webkit-letter-spacing:2px;-moz-letter-spacing:2px;-ms-letter-spacing:2px;letter-spacing:2px;font-size:23px;margin:10px 10px 20px 10px;color:#fbfbfc;font-weight:400;}\", \".login-form-container .link-to-reset{text-align:center;display:block;margin:10px;font-size:13px;font-style:italic;color:#e5e6e8;-webkit-letter-spacing:1px;-moz-letter-spacing:1px;-ms-letter-spacing:1px;letter-spacing:1px;}\", \".login-form-container .form-icon{width:40px;height:40px;margin:auto;}\", \".login-form-container .form-icon svg{width:100%;height:100%;}\"]));\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isLoading: state.auth.isLoading\n  };\n};\n\nvar mapDispatchToProps = {\n  __CHANGE_STATUS_IS_LOADING: __CHANGE_STATUS_IS_LOADING\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Login));","map":null,"metadata":{},"sourceType":"module"}